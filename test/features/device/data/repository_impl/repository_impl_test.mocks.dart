// Mocks generated by Mockito 5.3.2 from annotations
// in smartx/test/features/device/data/repository_impl/repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:smartx/features/devices/data/model/routines_model.dart' as _i5;
import 'package:smartx/features/devices/domain/entity/device.dart' as _i3;

import 'repository_impl_test.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TempDataSourceImplTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockTempDataSourceImplTest extends _i1.Mock
    implements _i2.TempDataSourceImplTest {
  MockTempDataSourceImplTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.Device> get devices => (super.noSuchMethod(
        Invocation.getter(#devices),
        returnValue: <_i3.Device>[],
      ) as List<_i3.Device>);
  @override
  set devices(List<_i3.Device>? _devices) => super.noSuchMethod(
        Invocation.setter(
          #devices,
          _devices,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<List<_i3.Device>?> getAllDevices() => (super.noSuchMethod(
        Invocation.method(
          #getAllDevices,
          [],
        ),
        returnValue: _i4.Future<List<_i3.Device>?>.value(),
      ) as _i4.Future<List<_i3.Device>?>);
  @override
  _i4.Future<bool> addNewRoutines(
    int? id,
    _i5.RoutineModel? routine,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNewRoutines,
          [
            id,
            routine,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
